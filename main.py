# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
import logging
import jsonpickle
import string
import random
import datetime
import asyncio
import sqlite3 as sq
from aiogram import Bot, Dispatcher, types
from aiogram.utils import markdown
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
from system.bot import *
from system.command import *
# –ö–∞—Å—Ç–æ–º –º–æ–¥—É–ª—å, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ dbManager.py –≤ –ø–∞–ø–∫–µ functions, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç
from functions.dbManager import Database, Functions
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=token, parse_mode="HTML")
dp = Dispatcher()
permissions = {
    "can_send_messages": False,
    "can_send_other_messages": False
}
allowedLetters = [" ", "–Ü", "–Ñ", "–á", "–ê", "–ë", "–í", "–ì", "–î", "–ï", "–Å", "–ñ", "–ó", "–ò", "–ô", "–ö", "–õ", "–ú", "–ù", "–û", "–ü", "–†", "–°", "–¢", "–£", "–§", "–•", "–¶", "–ß", "–®", "–©", "–™", "–´", "–¨", "–≠", "–Æ", "–Ø"]
stringDatetimeFormat = "%Y-%m-%d %H:%M:%S.%f"
# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def getMessageText(msg: types.Message):
    # –ü—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–µ–µ
    global userRank, message
    text = msg.text
    send = msg.answer
    reply = msg.reply
    db = sq.connect("users.db")
    cursor = db.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS users (
    id INTEGER,
    premium INTEGER
    )""")
    db.commit()
    cursor.execute(f"SELECT id FROM users WHERE id = {msg.from_user.id}")
    userData = cursor.fetchall()
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–º–∏—É–º
    premium = False
    if len(userData) == 0:
        cursor.execute(f"INSERT INTO users (id, premium) VALUES({msg.from_user.id}, 0)")
        db.commit()
    else:
        cursor.execute(f"SELECT premium FROM users WHERE id = {msg.from_user.id}")
        premium = cursor.fetchall()
        premium = premium[0][0]
        premium = bool(premium)
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å —Ñ—É–Ω–∫—Ü–∏–π
    functions = Functions(text)
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ json —Ñ–∞–π–ª–æ–≤
    botData = functions.loadJson("settings/settings.json")
    commandSettings = functions.loadJson("settings/commandSettings.json")
    # –°–æ–∑–¥–∞–µ–º/–∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
    db = Database(sq.connect(f"chats/{msg.chat.id}.db"))
    tables = db.CreateDB()
    Database(tables).CreateDB()
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º try, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏ –≤—ã–∑–≤–∞—Ç—å finally
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
        tablesData = tables.cursor()
        # –ï—Å–ª–∏ –Ω–µ—Ç—É –∑–∞–ø–∏—Å–∏ –æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Ç–æ —Å–æ–∑–¥–∞–µ–º, –∞ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ
        db.updateUsers(msg)
        if msg.chat.type != "private":
            db.addMsgToCount(msg)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é rank —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∫–æ–π —Ä–∞–Ω–≥ –∞–¥–º–∏–Ω–∞ —É –Ω–µ–≥–æ
        tablesData.execute(f"SELECT rank FROM users WHERE id = {msg.from_user.id}")
        rank = tablesData.fetchall()[0][0]
        if msg.reply_to_message:
            tablesData.execute(f"SELECT rank FROM users WHERE id = {msg.reply_to_message.from_user.id}")
            userRank = tablesData.fetchall()[0][0]
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ —Ç–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ
        if not msg.text:
            return
        if msg.chat.type == "private":
            await send("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö!")
        # JSON —Å–æ–æ–±—â–µ–Ω–∏—è
        if functions.startInList(getJson):
            with open("json.txt", "w") as fh:
                fh.write(str(jsonpickle.encode(msg)))
            fileToSend = types.FSInputFile("json.txt")
            await msg.answer_document(fileToSend)
        # –°–Ω–∏–º–∞–µ—Ç –≤—Å–µ—Ö —Å –∞–¥–º–∏–Ω–∞
        if text.upper() in ["/–°–ù–Ø–¢–¨ –í–°–ï–•", "!–°–ù–Ø–¢–¨ –í–°–ï–•", ".–°–ù–Ø–¢–¨ –í–°–ï–•"]:
            if rank < commandSettings["adminEditor"]:
                rank = botData[f'rank{commandSettings["adminEditor"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['adminEditor']})")
                return
            tablesData.execute("UPDATE users SET rank = 0")
            await send("‚ùé –í—Å–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω—ã\n\nüí¨ –°–æ–∑–¥–∞—Ç–µ–ª—å —á–∞—Ç–∞ –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É\n\"<code>–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è\"</code>")
            return
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –∫–æ–º–∞–Ω–¥ –ø—Ä–µ—Ñ–∏–∫—Å, –µ—Å–ª–∏ –¥–∞ —Ç–æ —É–¥–∞–ª—è–µ–º, –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—à–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
        if text[0] in ["!", ".", "/"]:
            text = text[1:]
        # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∏–∫–∞
        if text.upper() == "-–ù–ò–ö":
            if not msg.reply_to_message:
                tablesData.execute(f"UPDATE users SET customNick = 0 WHERE id = {msg.from_user.id}")
            elif rank == 5:
                tablesData.execute(f"UPDATE users SET customNick = 0 WHERE id = {msg.reply_to_message.from_user.id}")
            await send("‚ùé –ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª—ë–Ω")
            db.updateUsers(msg)
        # –°–º–µ–Ω–∞ –Ω–∏–∫–∞
        if text.upper().startswith("+–ù–ò–ö"):
            nick = text[5:]
            if len(nick) > botData["symbolLimit"]:
                await send(f"‚úèÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ {botData['symbolLimit']} —Å–∏–º–≤–æ–ª–æ–≤")
                return
            if len(nick) < 4:
                await send("‚úèÔ∏è –í –Ω–∏–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞")
                return
            if ("ROST" in nick.upper() or "R–ûST" in nick.upper()) and msg.from_user.id != 1179525928:
                await send("–°–∞–º—ã–π —É–º–Ω—ã–π —Ç—É—Ç?")
                return
            for x in nick:
                if not x.upper() in (list(string.ascii_letters) + list(string.digits) + allowedLetters):
                    await send(f"‚úèÔ∏è –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª ¬´{x}¬ª")
                    return
            tablesData.execute(f"SELECT nick, id FROM users WHERE nick = '{nick}'")
            res = tablesData.fetchall()
            if len(res) != 0:
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={tablesData.fetchall()[0][1]}")
                await send(f"‚ùå –¢–∞–∫–æ–π –Ω–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {hyperlink}!")
                return
            tablesData.execute(f"UPDATE users SET customNick = 1 WHERE id = {msg.from_user.id}")
            tablesData.execute(f"UPDATE users SET nick = '{nick}' WHERE id = {msg.from_user.id}")
            await send(f"‚úÖ –ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ¬´{nick}¬ª")
        # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
        if functions.startInList(whoAdmin):
            totalAdmins = 0
            for x in range(1, 6):
                tablesData.execute(f"SELECT nick, id FROM users WHERE rank = {x}")
                res = tablesData.fetchall()
                totalAdmins += len(res)
            if totalAdmins == 0:
                await send("üóì –í —ç—Ç–æ–º —á–∞—Ç–µ —Ü–∞—Ä–∏—Ç –∞–Ω–∞—Ä—Ö–∏—è...")
                return
            text = ""
            for x in range(-5, 0):
                x = -x
                rank = botData[f"rank{x}"]
                tablesData.execute(f"SELECT nick, id, username FROM users WHERE rank = {x}")
                res = tablesData.fetchall()
                if len(res) == 1:
                    status = await userBot.get_users(res[0][2])
                    status = status.status
                    if status == enums.UserStatus.ONLINE:
                        status = "üéæ"
                    else:
                        status = "üèê"
                    hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={res[0][1]}")
                    text += f"{'‚≠ê'*x} {rank[0]}\n{status} {hyperlink}\n\n"
                elif len(res) > 1:
                    text += f"{'‚≠ê' * x} {rank[4]}\n"
                    for y in range(len(res)):
                        status = await userBot.get_users(res[y][2])
                        status = status.status
                        if status == enums.UserStatus.ONLINE:
                            status = "üéæ"
                        else:
                            status = "üèê"
                        hyperlink = markdown.hlink(res[y][0], f"tg://openmessage?user_id={res[y][1]}")
                        text += f"{status} {hyperlink}\n"
                    text += "\n"
            await send(text)
        # –í–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è
        if functions.startInList(returnOwner):
            owner = await bot.get_chat_member(msg.chat.id, msg.from_user.id)
            owner = owner.status
            if str(owner) == "ChatMemberStatus.CREATOR":
                tablesData.execute(f"UPDATE users SET rank = 5 WHERE id = {msg.from_user.id}")
                await send("‚úÖ –°–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø—Ä–∞–≤–∞—Ö")
        # –°–º–µ–Ω–∞ —Ä–∞–Ω–≥–∞ —á–µ–ª–æ–≤–µ–∫–∞
        if text.upper().startswith("–ù–ê–ó–ù–ê–ß–ò–¢–¨"):
            parameters = text.split(" ")
            if rank < commandSettings["adminEditor"]:
                rank = botData[f'rank{commandSettings["adminEditor"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['adminEditor']})")
                return
            if not parameters[1].isdigit():
                await send("‚ùå —Ä–∞–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã–ª —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 0 –¥–æ 5")
                return
            if 0 > int(parameters[1]) > 5:
                await send("‚ùå —Ä–∞–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã–ª —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 0 –¥–æ 5")
                return
            rank = int(parameters[1])
            if msg.reply_to_message:
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.reply_to_message.from_user.id}")
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.reply_to_message.from_user.id}")
                tablesData.execute(f"UPDATE users SET rank = {rank} WHERE id = {msg.reply_to_message.from_user.id}")
            else:
                user = parameters[2][1:]
                if user.isdigit():
                    tablesData.execute(f"SELECT nick, id FROM users WHERE id = {int(user)}")
                    res = tablesData.fetchall()
                    if len(res) == 0:
                        user = await userBot.get_users(int(user))
                        if not user.is_contact:
                            db.addUser(user)
                        else:
                            return
                        tablesData.execute(f"SELECT nick, id FROM users WHERE id = {user.id}")
                        res = tablesData.fetchall()
                else:
                    user = await userBot.get_users(user)
                    tablesData.execute(f"SELECT nick, id FROM users WHERE id = {user.id}")
                    res = tablesData.fetchall()
                    if len(res) == 0:
                        if not user.is_contact:
                            db.addUser(user)
                        else:
                            return
                    tablesData.execute(f"SELECT nick, id FROM users WHERE id = {user.id}")
                    res = tablesData.fetchall()
                    tablesData.execute(f"UPDATE users SET rank = {rank} WHERE id = {user.id}")
                hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={res[0][1]}")
            rank = botData[f'rank{rank}'][3]
            await send(f"{hyperlink} –Ω–∞–∑–Ω–∞—á–µ–Ω {rank}")
        # –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if functions.startInList(getId):
            if rank < commandSettings["getId"]:
                rank = botData[f'rank{commandSettings["getId"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['getId']})")
                return
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–æ –≤—ã–≤–æ–¥–∏–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            if msg.reply_to_message:
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.reply_to_message.from_user.id}")
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.reply_to_message.from_user.id}")
                await send(f"üÜî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {hyperlink} —Ä–∞–≤–µ–Ω\n<code>@{msg.reply_to_message.from_user.id}</code>\nüÜî —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–≤–µ–Ω <code>@{msg.message_id}</code>")
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –≤ –æ—Ç–≤–µ—Ç –∏ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ –∫–æ–º–∞–Ω–¥—ã (—Ç–æ-–µ—Å—Ç—å –Ω–∏–∫—Ç–æ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏) –≤—ã–≤–æ–¥–∏–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø–∏—Å–∞–ª –∫–æ–º–∞–Ω–¥—É
            elif not msg.reply_to_message and len(text) == functions.startInList(getId):
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.from_user.id}")
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.from_user.id}")
                await send(f"üÜî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {hyperlink} —Ä–∞–≤–µ–Ω\n<code>@{msg.from_user.id}</code>\nüÜî —á–∞—Ç–∞ —Ä–∞–≤–µ–Ω <code>@{msg.chat.id}</code>")
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–∏ –ø–æ–¥ –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π –≤—ã—à–µ, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º 3 –≤–∞—Ä–∏–∞–Ω—Ç
            else:
                user = text[functions.startInList(getId) + 2:]
                if functions.startInList("123456789", user):
                    user = await userBot.get_users(int(user))
                else:
                    user = await userBot.get_users(user)
                tablesData.execute(f"SELECT nick FROM users WHERE id = {user.id}")
                res = tablesData.fetchall()
                if len(res) == 0:
                    if not user.is_contact:
                        db.addUser(user)
                        tablesData.execute(f"SELECT nick FROM users WHERE id = {user.id}")
                        res = tablesData.fetchall()
                        hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={user.id}")
                    else:
                        hyperlink = markdown.hlink("???", f"tg://openmessage?user_id={user.id}")
                else:
                    hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={user.id}")
                await send(f"üÜî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {hyperlink} —Ä–∞–≤–µ–Ω\n<code>@{user.id}</code>")
        # –ú–∞–≥–∞–∑–∏–Ω –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤
        if text.upper().startswith("+–ü–†–ï–§–ò–ö–° "):
            rostCoins = db.getValue("users", "rostCoins", f"WHERE id = {msg.from_user.id}")[0][0]
            prefix = text[9:]
            if rostCoins < 500:
                await send(f"‚ùå –ü—Ä–µ—Ñ–∏–∫—Å —Å—Ç–æ–∏—Ç 500 –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤!\nü™ô –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {500-rostCoins} –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤")
                return
            status = await bot.get_chat_member(msg.chat.id, msg.from_user.id)
            status = str(status.status)
            if status == "ChatMemberStatus.MEMBER":
                await bot.promote_chat_member(msg.chat.id, msg.from_user.id, is_anonymous=False,  can_manage_chat=False, can_delete_messages=False,
                                              can_manage_video_chats=False, can_restrict_members=False, can_promote_members=False,
                                              can_invite_users=True, can_post_messages=False, can_edit_messages=False, can_pin_messages=False,
                                              can_change_info=False, can_manage_topics=False)
            await bot.set_chat_administrator_custom_title(msg.chat.id, msg.from_user.id, prefix)
            await send(f"‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {prefix}")
            db.setValue("users", "rostCoins", rostCoins - 500, f"WHERE id = {msg.from_user.id}")
        # –ü–µ—Ä–µ–¥–∞—Ç—å –†–æ—Å—Ç–ö–æ–∏–Ω—ã
        if text.upper().startswith("–ü–ï–†–ï–î–ê–¢–¨"):
            text = text[9:]
            text = text.split("@")
            coins = text[0]
            coins = coins.replace(" ", "")
            if coins.isdigit():
                try:
                    coins = int(coins)
                except Exception as e:
                    await send("‚ùå –ù–µ–≤–µ—Ä–Ω–æ –≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏—è!")
                    return
            else:
                await send("‚ùå –ù–µ–≤–µ—Ä–Ω–æ –≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏—è!")
                return
            rostCoins = db.getValue("users", "rostCoins", f"WHERE id = {msg.from_user.id}")[0][0]
            if msg.reply_to_message:
                userToGetCoins = msg.reply_to_message.from_user.id
            elif len(text) == 1:
                userToGetCoins = msg.from_user.id
            else:
                userToGetCoins = text[1]
                if userToGetCoins.isdigit():
                    userToGetCoins = int(userToGetCoins)
                else:
                    userToGetCoins = await userBot.get_users(userToGetCoins)
                    userToGetCoins = userToGetCoins.id

            if coins > rostCoins:
                await send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!")
                return
            db.setValue("users", "rostCoins", rostCoins-coins, f"WHERE id = {msg.from_user.id}")
            rostCoins = db.getValue("users", "rostCoins", f"WHERE id = {userToGetCoins}")[0][0]
            db.setValue("users", "rostCoins", rostCoins + coins, f"WHERE id = {userToGetCoins}")
            nick = db.getValue("users", "nick", f"WHERE id = {msg.from_user.id}")[0][0]
            user = markdown.hlink(nick, f"tg://openmessage?user_id={msg.from_user.id}")
            userToGetCoinsNick = db.getValue("users", "nick", f"WHERE id = {userToGetCoins}")[0][0]
            userToGetCoinsNick2 = markdown.hlink(userToGetCoinsNick, f"tg://openmessage?user_id={userToGetCoins}")
            await send(f"‚úÖ {user} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª {coins} –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ –∫ {userToGetCoinsNick2}!")
            return
        # –ö–∞–∑–∏–Ω–æ
        if text.upper().startswith("–ö–ê–ó–ò–ù–û "):
            rostCoins = db.getValue("users", "rostCoins", f"WHERE id = {msg.from_user.id}")[0][0]
            coins = text[7:]
            multiplier = random.randint(2, 4)
            if coins.isdigit():
                coins = int(coins)
            else:
                await send("‚ùå –û—à–∏–±–∫–∞! –ß–∏—Å–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ!")
                return
            if coins > rostCoins:
                await send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!")
                return
            if 20 > coins:
                await send("ü™ô –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 20 –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤")
                return
            result = random.randint(0, 99)
            if result < 60:
                multiplier = random.uniform(0.5, 1)
                await reply(f"üòû –í–∞–º –Ω–µ –ø–æ–≤–µ–∑–ª–æ...\nü™ô -{round(coins * multiplier)} —Å –±–∞–ª–∞–Ω—Å–∞")
                db.setValue("users", "rostCoins", rostCoins - round(coins * multiplier),
                            f"WHERE id = {msg.from_user.id}")
            elif result < 90:
                await reply("‚ùì –ù–µ –∑–Ω–∞—é —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –ª–∏ –≤–∞–º –∏–ª–∏ –Ω–µ—Ç, –Ω–æ –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏ –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∏")
                return
            else:
                multiplier = random.randint(2, 4)
                await reply(f"üçÄ –£–î–ê–ß–ê! +{round(coins * multiplier)} –∫ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–º—É –±–∞–ª–∞–Ω—Å—É!")
                db.setValue("users", "rostCoins", rostCoins + (coins * multiplier), f"WHERE id = {msg.from_user.id}")
                return

        # –§–µ—Ä–º–∞
        if functions.startInList(farm):
            DK = db.getValue("users", "nextFarm", f"WHERE id = {msg.from_user.id}")[0][0]
            if DK == "0" or DK == "Rostmoment":
                DK = datetime.datetime.now()
            else:
                DK = datetime.datetime.strptime(DK, stringDatetimeFormat)
            rostCoins = db.getValue("users", "rostCoins", f"WHERE id = {msg.from_user.id}")[0][0]
            name = f"message{msg.message_id}"
            if DK > datetime.datetime.now():
                difference = DK - datetime.datetime.now()
                hours = difference.total_seconds() // 3600
                minutes = (difference.total_seconds() % 3600) // 60
                seconds = difference.total_seconds() % 60
                locals()[name] = await reply(f"‚ùå –ù–ï–ó–ê–ß–Å–¢! –î–æ–±—ã–≤–∞—Ç—å –†–æ—Å—Ç–ö–æ–∏–Ω—ã –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 2 —á–∞—Å–∞!\nüìÖ –°–ª–µ–¥—É—â–∞—è –¥–æ–±—ã—á–∞ —á–µ—Ä–µ–∑ {round(hours)}—á. {round(minutes)}–º. {round(seconds)}—Å.")
            elif DK <= datetime.datetime.now():
                coinsToAdd = random.randint(20, 75)
                if random.randint(0, 100) == 1:
                    coinsToAdd = random.randint(100, 500)
                    locals()[name] = await reply(f"üîë –£–î–ê–ß–ê!!! –í–∞–º —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –∫–µ–º-—Ç–æ –∫–ª—é—á –æ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ ü™ô\n+{coinsToAdd} –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ –∫ –±–∞–ª–∞–Ω—Å—É!")
                else:
                    locals()[name] = await reply(f"‚úÖ –ó–ê–ß–Å–¢! +{coinsToAdd} –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ ü™ô –∫ –±–∞–ª–∞–Ω—Å—É")
                db.setValue("users", "rostCoins", rostCoins + coinsToAdd, f"WHERE id = {msg.from_user.id}")
                db.setValue("users", "nextFarm", str(datetime.datetime.now() + datetime.timedelta(hours=2)), f"WHERE id = {msg.from_user.id}")
            await asyncio.sleep(10)
            await msg.delete()
            await locals()[name].delete()
        # –ü—Ä–æ—Ñ–∏–ª—å
        if functions.startInList(profile):
            if msg.reply_to_message:
                userIdToGetProfile = msg.reply_to_message.from_user.id
            elif len(text) == functions.startInList(profile):
                userIdToGetProfile = msg.from_user.id
            else:
                newText = text[text.find("@")+1:]
                newText = newText.strip()
                if newText.isdigit():
                    userIdToGetProfile = int(newText)
                else:
                    userIdToGetProfile = await userBot.get_users(newText)
                    userIdToGetProfile = userIdToGetProfile.id
                user = await userBot.get_users(userIdToGetProfile)
                firstDate = db.getValue("users", "id", f"WHERE id = {userIdToGetProfile}")
                if len(firstDate) == 0:
                    db.addUser(user)
            firstDate = db.getValue("users", "firstDate", f"WHERE id = {userIdToGetProfile}")[0][0]
            nick = db.getValue("users", "nick", f"WHERE id = {userIdToGetProfile}")[0][0]
            messageCount = db.getValue("users", "messageCount", f"WHERE id = {userIdToGetProfile}")[0][0]
            rostCoins = db.getValue("users", "rostCoins", f"WHERE id = {userIdToGetProfile}")[0][0]
            rank = db.getValue("users", "rank ", f"WHERE id = {userIdToGetProfile}")[0][0]
            rank = botData[f'rank{rank}'][3]
            await send(f"üë§ –≠—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nick}\nüÜî –ï–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞–π–¥–∏: {userIdToGetProfile}\n‚≠ê –í —ç—Ç–æ–º —á–∞—Ç–µ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è {rank}\nüìÖ –í–ø–µ—Ä–≤—ã–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –ø–æ—è–≤–∏–ª—è –≤ {firstDate}\nüí¨ –û–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏–ª {messageCount} —Å–æ–æ–±—â–µ–Ω–∏–π\nü™ô –£ –Ω–µ–≥–æ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {rostCoins} –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤")
        # –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ—Ö
        if functions.startInList(tagAll):
            if rank < commandSettings["tagAll"]:
                rank = botData[f'rank{commandSettings["tagAll"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['tagAll']})")
                return
            text = text[functions.startInList(tagAll)+1:]
            tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.from_user.id}")
            hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.from_user.id}")
            textToSend = f"üì¢ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {hyperlink} –æ–±—ä—è–≤–∏–ª –æ–±—â–∏–π —Å–±–æ—Ä! (—Ç—É—Ç –∫–æ—Ä–æ—á–µ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ)\n"
            async for member in userBot.get_chat_members(msg.chat.id):
                if not member.user.username is None:
                    textToSend += f"@{member.user.username} "
            textToSend = textToSend.replace("—Ç—É—Ç –∫–æ—Ä–æ—á–µ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ", str(textToSend.count("@")))
            if text:
                textToSend += f"\n\nüí¨ –¢–ï–ö–°–¢ –û–ë–™–Ø–í–õ–ï–ù–ò–Ø: \n{text}"
            await send(textToSend)
        # –ë–∞–Ω
        if functions.startInList(ban):
            prichina, period = "", ""
            if rank < commandSettings["ban"]:
                rank = botData[f'rank{commandSettings["mute"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['ban']})")
                return
            text = text[functions.startInList(ban)+1:]
            text = text.strip()
            parameters = text.split("\n")
            tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.from_user.id}")
            moderlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.from_user.id}")
            if msg.reply_to_message:
                if rank <= userRank:
                    await send("üìù –†–∞–Ω–≥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—à–µ–º—É –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –ø–æ —Ä–∞–Ω–≥—É")
                    return
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.reply_to_message.from_user.id}")
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.reply_to_message.from_user.id}")
                if len(text) == 0:
                    await bot.ban_chat_member(chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=datetime.datetime.now()+datetime.timedelta(days=1))
                    await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
                    return
                if len(parameters) > 1:
                    for x in range(1, len(parameters)):
                        prichina += f"{parameters[x]}\n"
                    await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {parameters[0]}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
                    await bot.ban_chat_member(chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=functions.toDate(parameters[0]))
                else:
                    if functions.toDate(parameters[0]) is ValueError:
                        for x in parameters:
                            prichina += x
                        await bot.ban_chat_member(chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=datetime.datetime.now() + datetime.timedelta(days=1))
                        await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
                        return
                    await bot.ban_chat_member(chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=functions.toDate(parameters[0]))
                    await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {parameters[0]}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
                return
            if len(parameters) > 1:
                for x in range(1, len(parameters)):
                    prichina += f"{parameters[x]}\n"
            parameters = parameters[0]
            parameters.strip()
            if parameters.count("@") > 0:
                period = functions.toSymbol(parameters, "@")
                user = parameters[len(functions.toSymbol(parameters, "@"))+1:]
                user = user.strip()
            else:
                user = parameters[1:]
            if not functions.startInList("123456789", user):
                user = await userBot.get_users(user)
            else:
                user = await userBot.get_users(int(user))
            tablesData.execute(f"SELECT rank FROM users WHERE id = {user.id}")
            userRank = tablesData.fetchall()[0][0]
            if rank <= userRank:
                await send("üìù –†–∞–Ω–≥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—à–µ–º—É –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –ø–æ —Ä–∞–Ω–≥—É")
                return
            tablesData.execute(f"SELECT nick FROM users WHERE id = {user.id}")
            res = tablesData.fetchall()
            if len(res) == 0:
                if not user.is_contact:
                    db.addUser(user)
                    tablesData.execute(f"SELECT nick FROM users WHERE id = {user.id}")
                    res = tablesData.fetchall()
                    hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={user.id}")
                else:
                    hyperlink = markdown.hlink("???", f"tg://openmessage?user_id={user.id}")
            else:
                hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={user.id}")
            if period:
                await bot.ban_chat_member(chat_id=msg.chat.id, user_id=user.id, until_date=functions.toDate(period))
                if prichina:
                    await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {period}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
                else:
                    await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {period}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
                return
            await bot.ban_chat_member(chat_id=msg.chat.id, user_id=user.id, until_date=datetime.datetime.now() + datetime.timedelta(days=1))
            if prichina:
                await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
            else:
                await send(f"üî¥ {hyperlink} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
        # –ú—É—Ç
        if functions.startInList(mute):
            prichina, period = "", ""
            if rank < commandSettings["mute"]:
                rank = botData[f'rank{commandSettings["mute"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['mute']})")
                return
            text = text[functions.startInList(mute)+1:]
            text = text.strip()
            parameters = text.split("\n")
            tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.from_user.id}")
            moderlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.from_user.id}")
            if msg.reply_to_message:
                if rank <= userRank:
                    await send("üìù –†–∞–Ω–≥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—à–µ–º—É –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –ø–æ —Ä–∞–Ω–≥—É")
                    return
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.reply_to_message.from_user.id}")
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.reply_to_message.from_user.id}")
                if len(text) == 0:
                    await bot.restrict_chat_member(permissions=permissions, chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=datetime.datetime.now()+datetime.timedelta(days=1))
                    await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
                    return
                if len(parameters) > 1:
                    for x in range(1, len(parameters)):
                        prichina += f"{parameters[x]}\n"
                    await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ {parameters[0]}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
                    await bot.restrict_chat_member(permissions=permissions, chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=functions.toDate(parameters[0]))
                else:
                    if functions.toDate(parameters[0]) is ValueError:
                        for x in parameters:
                            prichina += x
                        await bot.restrict_chat_member(permissions=permissions, chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=datetime.datetime.now() + datetime.timedelta(days=1))
                        await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
                        return
                    await bot.restrict_chat_member(permissions=permissions, chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id, until_date=functions.toDate(parameters[0]))
                    await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ {parameters[0]}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
                return
            if len(parameters) > 1:
                for x in range(1, len(parameters)):
                    prichina += f"{parameters[x]}\n"
            parameters = parameters[0]
            parameters.strip()
            if parameters.count("@") > 0:
                period = functions.toSymbol(parameters, "@")
                user = parameters[len(functions.toSymbol(parameters, "@"))+1:]
                user = user.strip()
            else:
                user = parameters[1:]
            if not functions.startInList("123456789", user):
                user = await userBot.get_users(user)
            else:
                user = await userBot.get_users(int(user))
            tablesData.execute(f"SELECT rank FROM users WHERE id = {user.id}")
            userRank = tablesData.fetchall()[0][0]
            if rank <= userRank:
                await send("üìù –†–∞–Ω–≥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—à–µ–º—É –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –ø–æ —Ä–∞–Ω–≥—É")
                return
            tablesData.execute(f"SELECT nick FROM users WHERE id = {user.id}")
            res = tablesData.fetchall()
            if len(res) == 0:
                if not user.is_contact:
                    db.addUser(user)
                    tablesData.execute(f"SELECT nick FROM users WHERE id = {user.id}")
                    res = tablesData.fetchall()
                    hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={user.id}")
                else:
                    hyperlink = markdown.hlink("???", f"tg://openmessage?user_id={user.id}")
            else:
                hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={user.id}")
            if period:
                await bot.restrict_chat_member(permissions=permissions, chat_id=msg.chat.id, user_id=user.id, until_date=functions.toDate(period))
                if prichina:
                    await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ {period}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
                else:
                    await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ {period}\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")
                return
            await bot.restrict_chat_member(permissions=permissions, chat_id=msg.chat.id, user_id=user.id, until_date=datetime.datetime.now() + datetime.timedelta(days=1))
            if prichina:
                await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {prichina}")
            else:
                await send(f"üîá {hyperlink} –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞ 1 –¥–µ–Ω—å\nüë§ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderlink}")

        # –ö–∏–∫
        if functions.startInList(kick):
            if rank < commandSettings["kick"]:
                rank = botData[f'rank{commandSettings["kick"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['kick']})")
                return
            parameters = text.split()
            if msg.reply_to_message:
                if rank <= userRank:
                    await send("üìù –†–∞–Ω–≥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—à–µ–º—É –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –ø–æ —Ä–∞–Ω–≥—É")
                    return
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.reply_to_message.from_user.id}")
                hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={msg.reply_to_message.from_user.id}")
                tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.from_user.id}")
                await bot.ban_chat_member(chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id)
                await bot.unban_chat_member(chat_id=msg.chat.id, user_id=msg.reply_to_message.from_user.id)
                if len(parameters) == 1:
                    await send(f"üî¥ {hyperlink} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω —Å —á–∞—Ç–∞\nüë§–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {markdown.hlink(tablesData.fetchall()[0][0], f'tg://openmessage?user_id={msg.from_user.id}')}")
                    return
                else:
                    await send(f"üî¥ {hyperlink} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω —Å —á–∞—Ç–∞\nüë§–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {markdown.hlink(tablesData.fetchall()[0][0], f'tg://openmessage?user_id={msg.from_user.id}')}\nüí¨–ü—Ä–∏—á–∏–Ω–∞: {parameters[1]}")
                return
            if not functions.startInList("123456789", parameters[1][1]):
                user = await userBot.get_users(parameters[1][1:])
                user = user.id
            else:
                user = int(parameters[1][1:])
            tablesData.execute(f"SELECT rank FROM users WHERE id = {user}")
            userRank = tablesData.fetchall()[0][0]
            if rank <= userRank:
                await send("üìù –†–∞–Ω–≥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—à–µ–º—É –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –ø–æ —Ä–∞–Ω–≥—É")
                return
            tablesData.execute(f"SELECT nick FROM users WHERE id = {user}")
            hyperlink = markdown.hlink(tablesData.fetchall()[0][0], f"tg://openmessage?user_id={user}")
            await bot.ban_chat_member(chat_id=msg.chat.id, user_id=user)
            await bot.unban_chat_member(chat_id=msg.chat.id, user_id=user)
            tablesData.execute(f"SELECT nick FROM users WHERE id = {msg.from_user.id}")
            if len(parameters) == 2:
                await send(f"üî¥ {hyperlink} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω —Å —á–∞—Ç–∞\nüë§–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {markdown.hlink(tablesData.fetchall()[0][0], f'tg://openmessage?user_id={msg.from_user.id}')}")
            else:
                await send(f"üî¥ {hyperlink} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω —Å —á–∞—Ç–∞\nüë§–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {markdown.hlink(tablesData.fetchall()[0][0], f'tg://openmessage?user_id={msg.from_user.id}')}\nüí¨–ü—Ä–∏—á–∏–Ω–∞: {parameters[2]}")
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –±–æ—Ç
        if text.upper() == "–ü–ò–ù–ì":
            await send("–ü–û–ù–ì")
        if text.upper() == "–ü–ò–£":
            await send("–ü–ê–£")
        if text.upper() == "–ö–ò–ù–ì":
            await send("–ö–û–ù–ì")
        if text.upper() == "–ë–û–¢":
            await send("‚úÖ –ù–∞ –º–µ—Å—Ç–µ")
        if text.upper() == "–¢–ò–ö":
            await send("–¢–û–ö")
        # –¢–æ–ø –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º
        if functions.startInList(topCommand):
            if rank < commandSettings["topCommand"]:
                rank = botData[f'rank{commandSettings["topCommand"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['topCommand']})")
                return
            tablesData.execute(f"SELECT id, messageCount FROM users WHERE messageCount>0")
            res = tablesData.fetchall()
            totalMessage = 0
            N = text[functions.startInList(topCommand)+1:]
            for x in range(len((res))):
                totalMessage += res[x][1]
            if N.isdigit() or N.isnumeric():
                N = int(N)
            else:
                N = 10
            if N > len(res):
                N = len(res)
            if N == 0 or N < 0:
                await send("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 0")
                return
            text = ""
            text += f"üìä –¢–æ–ø {N} —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ça\n\n"
            top = functions.top(N, res)
            for i in range(1, N + 1):
                tablesData.execute(f"SELECT nick FROM users WHERE id = {top[i - 1][0]}")
                res = tablesData.fetchall()
                hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={top[i - 1][0]}")
                text += f"{i}. {hyperlink} ‚Äî {top[i - 1][1]}\n"
            text += f"\n–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—ã–ª–æ –Ω–∞—Å—á–∏—Ç–∞–Ω–æ: {totalMessage}"
            await send(text)
        # –¢–æ–ø –ø–æ —Ä–æ—Å—Ç–ö–æ–∏–Ω–∞–º
        if text.upper().startswith("–†–¢–û–ü"):
            if rank < commandSettings["topCommand"]:
                rank = botData[f'rank{commandSettings["topCommand"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['topCommand']})")
                return
            tablesData.execute(f"SELECT id, rostCoins FROM users WHERE rostCoins>0")
            res = tablesData.fetchall()
            totalCoins = 0
            N = text[5:]
            for x in range(len((res))):
                totalCoins += res[x][1]
            if N.isdigit() or N.isnumeric():
                N = int(N)
            else:
                N = 10
            if N > len(res):
                N = len(res)
            if N == 0 or N < 0:
                await send("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 0")
                return
            text = ""
            text += f"üìä –¢–æ–ø {N} —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ça –ø–æ –†–æ—Å—Ç–ö–æ–∏–Ω–∞–º ü™ô\n\n"
            top = functions.top(N, res)
            for i in range(1, N + 1):
                tablesData.execute(f"SELECT nick FROM users WHERE id = {top[i - 1][0]}")
                res = tablesData.fetchall()
                hyperlink = markdown.hlink(res[0][0], f"tg://openmessage?user_id={top[i - 1][0]}")
                text += f"{i}. {hyperlink} ‚Äî {top[i - 1][1]}\n"
            text += f"\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –†–æ—Å—Ç–ö–æ–∏–Ω–æ–≤ ü™ô –≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {totalCoins}"
            await send(text)
        # –†–∞–Ω–¥–æ–º
        if functions.startInList(rng):
            if rank < commandSettings["rng"]:
                rank = botData[f'rank{commandSettings["rng"]}'][0]
                await send(f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ ¬´{rank}¬ª ({commandSettings['rng']})")
                return
            commandTemp = text.split()
            parameters = []
            commandTemp.pop(0)
            for x in commandTemp:
                parameters.append(float(x))
            if len(parameters) == 0:
                await send(f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [0 --- 10] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 2 —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ {round(random.uniform(0, 10), 2)}")
            elif len(parameters) == 1:
                if parameters[0] == 0:
                    await send(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–∫–∞–∑–∞–ª—Å—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π, –Ω–∏ –∑–∞ —á—Ç–æ –Ω–µ –ø–æ–≤–µ—Ä–∏—Ç–µ, –Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [0 --- 0] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 2 —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ 0.0\n–î–∞, –≤—Å–µ –≤ —à–æ–∫–µ –∏ –Ω–µ—Ç —Å–ª–æ–≤")
                    return
                if parameters[0] < 0:
                    await send("üìù –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ")
                    return
                await send(f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [0 --- {parameters[0]}] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 2 —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ {round(random.uniform(0, parameters[0]), 2)}")
            elif len(parameters) == 2:
                if parameters[0] == parameters[1]:
                    await send(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–∫–∞–∑–∞–ª—Å—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π, –Ω–∏ –∑–∞ —á—Ç–æ –Ω–µ –ø–æ–≤–µ—Ä–∏—Ç–µ, –Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [{parameters[0]} --- {parameters[0]}] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 2 —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ {parameters[0]}\n–î–∞, –≤—Å–µ –≤ —à–æ–∫–µ –∏ –Ω–µ—Ç —Å–ª–æ–≤")
                    return
                if parameters[0] > parameters[1]:
                    await send("üìù –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ")
                    return
                await send(f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [{parameters[0]} --- {parameters[1]}] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 2 —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ {round(random.uniform(parameters[0], parameters[1]), 2)}")
            else:
                if parameters[0] == parameters[1]:
                    await send(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–∫–∞–∑–∞–ª—Å—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π, –Ω–∏ –∑–∞ —á—Ç–æ –Ω–µ –ø–æ–≤–µ—Ä–∏—Ç–µ, –Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [{parameters[0]} --- {parameters[0]}] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ {int(parameters[2])} —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ {parameters[0]}\n–î–∞, –≤—Å–µ –≤ —à–æ–∫–µ –∏ –Ω–µ—Ç —Å–ª–æ–≤")
                    return
                if parameters[0] > parameters[1]:
                    await send("üìù –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ")
                    return
                await send(f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [{parameters[0]} --- {parameters[1]}] —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ {int(parameters[2])} —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–∞–ª–æ –Ω–∞ {round(random.uniform(parameters[0], parameters[1]), int(parameters[2]))}")
    # –ï—Å–ª–∏ —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
    except Exception as e:
        await send(f"‚ö† –û—à–∏–±–∫–∞ –≤ {e.__traceback__.tb_lineno} —Å—Ç—Ä–æ–∫–µ!\n\n<code>{e}</code>")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º finally —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –ª–∏–±–æ –æ—à–∏–±–∫–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –∑–∞–∫—Ä—ã—Ç—å –±–¥
    finally:
        tables.commit()
        tables.close()
# –ß—Ç–æ–±—ã –±–æ—Ç –ù–ï —á–∏—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–¥–∞ –æ–Ω –≤—ã–∫–ª—é—á–µ–Ω, —ç—Ç–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –æ–Ω –Ω–µ —É–ø–∞–ª –∏–∑–∞ –æ–±—Ä–æ–±–∫–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def on_startup(bot: Bot):
    await bot.delete_webhook(drop_pending_updates=True)
# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
async def start():
    dp.startup.register(on_startup)
    await userBot.start()
    await dp.start_polling(bot)
    await asyncio.Future()
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.run_until_complete(start())
